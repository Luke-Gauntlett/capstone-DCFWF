name: Run ETL Pipeline

on:
  schedule:
    # 01:30 UTC ≈ 02:00 UK year-round (±30 min for DST)
    - cron: '30 1 * * *'
  workflow_dispatch:

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Fail fast if WooCommerce secrets are missing (using your names)
      - name: Validate required secrets
        run: |
          [ -n "${CONSUMER_KEY}" ] || { echo "::error::CONSUMER_KEY is not set"; exit 1; }
          [ -n "${CONSUMER_SECRET}" ] || { echo "::error::CONSUMER_SECRET is not set"; exit 1; }
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}

      # Quick 200-check to WooCommerce API; fails on 401/403/5xx
      - name: Smoke test WooCommerce API (orders)
        run: |
          set -e
          curl --fail -sS \
            "https://dcfreshwaterfish.co.uk/wp-json/wc/v3/orders?per_page=1&status=any&consumer_key=${CONSUMER_KEY}&consumer_secret=${CONSUMER_SECRET}" \
            >/dev/null
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}

      - name: Install deps, run pipeline, and commit marker file
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          # Run the pipeline (extract.py reads CONSUMER_KEY/CONSUMER_SECRET)
          python -m src.run_pipeline

          # Commit marker file if created/updated
          if [ -f data/other/last_extraction_time.json ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add data/other/last_extraction_time.json
            git commit -m "Update last extraction time" || echo "No changes to commit"
            git push
          else
            echo "No extraction marker file to commit"
          fi
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_SCHEMA: ${{ secrets.DB_SCHEMA }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_TABLE: ${{ secrets.DB_TABLE }}
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
